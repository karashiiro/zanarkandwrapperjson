name: Go

on:
  push:
    branches: [master]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: v${{ github.run_id }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: v${{ github.run_id }}
      
      - name: Make upload URL file
        run: "`%q` `${{ steps.create_release.outputs.upload_url }}` > upload_url.txt"
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: upload_url
          # A file, directory or wildcard pattern that describes what to upload
          path: upload_url.txt

  build:
    name: Build
    needs: [release]
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.operating-system }}
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: upload_url
        # Destination path
        path: upload_url.txt
    
    - name: Set environment variable (Linux)
      if: matrix.operating-system == 'ubuntu-latest'
      run: upload_url=`cat upload_url.txt`
      
    - name: Set environment variable (OS/X)
      if: matrix.operating-system == 'macos-latest'
      run: upload_url=`cat upload_url.txt`
      
    - name: Set environment variable (Windows)
      if: matrix.operating-system == 'windows-latest'
      run: setx upload_url < upload_url.txt
    
    - name: Setup system libraries
      if: matrix.operating-system == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y --no-install-recommends libpcap-dev
      
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go install

    - name: Build
      run: go build -v .

    - name: Upload a Release Asset (Linux)
      if: matrix.operating-system == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ZanarkandWrapperJSON
        asset_name: ZanarkandWrapperJSON-Linux-x64
        asset_content_type:	application/example
        
    - name: Upload a Release Asset (OS/X)
      if: matrix.operating-system == 'macos-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ZanarkandWrapperJSON
        asset_name: ZanarkandWrapperJSON-OSX-x64
        asset_content_type: application/example
        
    - name: Upload a Release Asset (Windows)
      if: matrix.operating-system == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ZanarkandWrapperJSON.exe
        asset_name: ZanarkandWrapperJSON-Win-x64
        asset_content_type: application/vnd.microsoft.portable-executable
