name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.operating-system }}
    steps:
    - name: Setup system libraries
      if: matrix.operating-system == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y --no-install-recommends libpcap-dev
      
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go install

    - name: Build
      run: go build -v .
      
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: ${{ github.ref }} # TODO change to version number

    - name: Upload a Release Asset (Linux)
      if: matrix.operating-system == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: ZanarkandWrapperJSON
        # The name of the asset you want to upload
        asset_name: ZanarkandWrapperJSON-Linux-x64
        
    - name: Upload a Release Asset (OS/X)
      if: matrix.operating-system == 'macos-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: ZanarkandWrapperJSON.app
        # The name of the asset you want to upload
        asset_name: ZanarkandWrapperJSON-OSX-x64
        
    - name: Upload a Release Asset (Windows)
      if: matrix.operating-system == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: ZanarkandWrapperJSON.exe
        # The name of the asset you want to upload
        asset_name: ZanarkandWrapperJSON-Win-x64
