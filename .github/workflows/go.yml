name: Go

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: v${{ github.run_id }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: v${{ github.run_id }}

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go install

    - name: Build for Windows
      run: go build -v .
    
    - name: Build for Linux
      env:
        GOOS: linux
        GOARCH: arm
        GOARM: 7
      run: go build -v .
    
    - name: Build for OS/X
      env:
        GOOS: darwin
        GOARCH: 386
      run: go build -v .

    - name: Upload a Release Asset (Linux)
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ZanarkandWrapperJSON
        asset_name: ZanarkandWrapperJSON-v${{ github.run_id }}-Linux-x64
        asset_content_type:	application/example
        
    - name: Upload a Release Asset (OS/X)
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ZanarkandWrapperJSON
        asset_name: ZanarkandWrapperJSON-v${{ github.run_id }}-darwin-x64
        asset_content_type: application/example
        
    - name: Upload a Release Asset (Windows)
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ZanarkandWrapperJSON.exe
        asset_name: ZanarkandWrapperJSON-v${{ github.run_id }}-Win-x64
        asset_content_type: application/vnd.microsoft.portable-executable
